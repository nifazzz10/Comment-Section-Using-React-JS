[{"E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\Comment.js":"1","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\Comments.js":"2","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\index.js":"3","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\CommentForm.js":"4","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\Mtt.js":"5","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\api.js":"6","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\App.js":"7"},{"size":5715,"mtime":1657543835916,"results":"8","hashOfConfig":"9"},{"size":3443,"mtime":1657543749648,"results":"10","hashOfConfig":"9"},{"size":269,"mtime":1657546264732,"results":"11","hashOfConfig":"9"},{"size":2681,"mtime":1657544424196,"results":"12","hashOfConfig":"9"},{"size":2300,"mtime":1657546407928,"results":"13","hashOfConfig":"9"},{"size":841,"mtime":1657460107327,"results":"14","hashOfConfig":"9"},{"size":236,"mtime":1656855806833,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1dkc5n7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\Comment.js",["33","34","35"],"import CommentForm from \"./CommentForm\";\nimport Chip from '@mui/material/Chip';\nimport Timeline from \"@mui/lab/Timeline\";\nimport ReplyIcon from '@mui/icons-material/Reply';\nimport TimelineItem from \"@mui/lab/TimelineItem\";\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@mui/lab/TimelineConnector\";\nimport TimelineOppositeContent from \"@mui/lab/TimelineOppositeContent\";\nimport TimelineContent from \"@mui/lab/TimelineContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport TreeItem from \"@mui/lab/TreeItem\";\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { red } from \"@mui/material/colors\";\nimport \"../index.css\";\nimport  { useEffect, useState } from \"react\"\nimport ReactMarkdown from \"react-markdown\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = \"#\";\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n}\nfunction stringAvatar(name) {\n  return {\n    sx: {fontSize:\"15px\",\n      bgcolor: stringToColor(name),width:\"32px\",height:\"32px\"\n    },\n    children: `${name.toUpperCase().charAt(0)}`,\n  };\n}\nconst useStyles = makeStyles({\n  \"@global\": {\n    \".MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label\": {\n      backgroundColor: \"white\"\n    },\n    \".MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label\": {\n      backgroundColor: \"red\"\n    }\n  }\n});\nconst styles = () => ({\n  selected: {\n    \"&:focus\": {\n      backgroundColor: \"aliceblue\"\n    }\n  }\n});\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Comment({ comment, replies, setActiveComment, activeComment,addComment,parentId = null,currentUserId,}){\n\n    // const [users, setUsers] = useState([])\n  \n    // const fetchData = () => {\n    //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //     .then(response => {\n    //       return response.json()\n    //     })\n    //     .then(data => {\n    //       setUsers(data)\n    //     })\n    // }\n  \n    // useEffect(() => {\n    //   fetchData()\n    // }, [])\n  \n  const isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\";\n  const canReply = Boolean(currentUserId);\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.createdAt).toLocaleTimeString();\n  const classes = useStyles();\n return(\n  <div>\n      <Box>\n        <TreeView  >\n          <Timeline key={comment.id}>\n            <TimelineItem>\n              <TimelineSeparator>\n                <Avatar  {...stringAvatar(comment.username) }  />{\" \"}\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineOppositeContent style={{maxWidth: \"1px\",paddingLeft: \"0px\",paddingRight: \"0px\", }}/>\n              <TimelineContent>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography variant=\"h6\" sx={{fontSize:\"15px\" ,fontWeight:\"bold\"}}>\n                    {comment.username.charAt(0).toUpperCase() + comment.username.slice(1)}\n                  </Typography>\n                  <Item variant=\"body2\" sx={{fontSize:\"10px\"}}> {createdAt}</Item>\n                </Stack>\n             \n      <ReactMarkdown children={comment.body} />\n    \n                 {/* <Typography variant=\"body2\" >{comment.body}</Typography> */}\n                <TreeItem className={classes}\n                  nodeId=\"1\" label={\n                  <TimelineContent>\n                   {canReply && (<Chip label=\"Reply\"  onClick={() =>  setActiveComment({  id: comment.id,  type: \"replying\",  }) } \n                   sx={{fontSize:\"10px\",mb:1}} size=\"small\" icon={<ReplyIcon /> }/>  )}\n                        {isReplying && ( \n                        <CommentForm submitLabel=\"Reply\" hasCancelButton handleSubmit={(text) => addComment(text, replyId)} handleCancel={() => { setActiveComment(null);}} />)} \n                    </TimelineContent> } >\n                  <TreeItem className={styles}\n                    nodeId=\"2\"\n                    label={\n                      <Timeline>\n                        {replies.length > 0 && (\n                          <div>\n                            {replies.map((reply) => (\n                              <Comment\n                                comment={reply}\n                                key={reply.id}\n                                setActiveComment={setActiveComment}\n                                activeComment={activeComment}\n                                addComment={addComment}\n                                parentId={comment.id}\n                                replies={[]}\n                                currentUserId={currentUserId}\n                              />\n                            ))}\n                          </div>\n                        )}\n                      </Timeline>}/>\n                </TreeItem>\n              </TimelineContent>\n            </TimelineItem>\n          </Timeline>\n        </TreeView>\n      </Box>\n    </div>\n  );}; \n\n      ","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\Comments.js",["36","37","38","39"],"E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\index.js",["40"],"E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\comments\\CommentForm.js",["41","42","43","44","45","46","47","48","49"],"import * as React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { useState,setState } from \"react\";\nimport InputUnstyled from \"@mui/base/InputUnstyled\";\nimport { styled } from \"@mui/system\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { Button, Stack, TextField } from \"@mui/material\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport \"../index.css\"\nimport { Editor } from 'react-draft-wysiwyg';\nimport MUIRichTextEditor from 'mui-rte'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";import { convertFromHTML } from \"draft-js\";import { ContentState } from \"draft-js\";\nimport { convertToRaw } from 'draft-js'\nimport { EditorState} from \"draft-js\";\nimport { draftToMarkdown } from \"markdown-draft-js\";\nconst CommentForm = ({\n  handleSubmit,submitLabel,hasCancelButton = false, handleCancel,initialText = \"\",\n}) => {\n\n  const emptyContent = JSON.stringify(\n    convertToRaw(EditorState.createEmpty().getCurrentContent())\n  );\n  const [text, setText] = useState(\"\");\n  const [content, setContent] = useState(emptyContent);\n\n  const handleChange = editorState => {\n    setText(draftToMarkdown(convertToRaw(editorState.getCurrentContent())))\n  };\n\n  \n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(text);\n    setText(\"\");\n  };\n\n  \nconst myTheme = createTheme({\n  // Set up your custom MUI theme here\n  overrides: {\n   \n    MUIRichTextEditor: {\n      root: {\n        marginTop: 2,\n        width: \"100%\",\n        marginBottom: 20,\n        backgroundColor: \"#edf2f4\",\n        \n         \n      \n      },\n      editor: {\n        border: \"1px solid white\",\n        height:\"80px\",\n      }\n    }\n  }\n})\n\n  return (\n    <div>  \n\n        {/* <!-- contact form --> */}\n\n       \n\n      <Box>\n      <form onSubmit={onSubmit}>   \n     \n      <ThemeProvider theme={myTheme}>\n    <MUIRichTextEditor\n      label=\"Type something here...\"\n      onChange={handleChange}\n      defaultValue={content}\n      inlineToolbar={true}\n    />\n  </ThemeProvider>\n  {/* <TextareaAutosize  \n         style = {{width: \"99.5%\",borderRadius:\"8px\",backgroundColor:\"#edf2f4\"}}\n          placeholder=\"Type your comment here...\"\n          rows={4}\n          value={text} onChange={(e) => setText(e.target.value)} /> */}\n    \n          <Stack  direction=\"row\" spacing={1}>\n        <Button type=\"submit\" variant=\"contained\"     endIcon={<SendIcon />} > {submitLabel} </Button>\n        {hasCancelButton && (\n          <Button   variant=\"contained\"   onClick={handleCancel} >Cancel</Button>\n        )}</Stack>\n        </form>\n      </Box>\n      </div>\n\n  );\n};\n\nexport default CommentForm;\n","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\Mtt.js",[],"E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\api.js",["50","51"],"import backendComments from \"./comments/Comments\"\nimport getData from \"./comments/Comments\"\n\nexport const getComments = async () => { try{\n  const response = await fetch('https://backcomments.s3.amazonaws.com/comments.json');\n  console.log('response  ', response)\n  return  [\n    {\n      id: 1,\n      username:\"nfeg\",\n      userId:1,\n      body:\"whame\",\n      parentId:null,\n   createdAt:    new Date().toISOString()\n    },\n\n  ];;\n}catch(error) {\n  return [];\n}\n\n};\n\nexport const createComment = async (text, parentId = null) => {\n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    body: text ,\n    parentId,\n    userId: \"1\",\n    username: \"nifaz\",\n    createdAt: new Date().toISOString(),\n  };\n};\n\nexport const updateComment = async (text) => {\n  return { text };\n};\n\nexport const deleteComment = async () => {\n  return {};\n};\n","E:\\techsellence\\COMMENT SECTION\\cs-withoutgui\\src\\App.js",[],{"ruleId":"52","severity":1,"message":"53","line":20,"column":10,"nodeType":"54","messageId":"55","endLine":20,"endColumn":13},{"ruleId":"52","severity":1,"message":"56","line":22,"column":11,"nodeType":"54","messageId":"55","endLine":22,"endColumn":20},{"ruleId":"52","severity":1,"message":"57","line":22,"column":22,"nodeType":"54","messageId":"55","endLine":22,"endColumn":30},{"ruleId":"52","severity":1,"message":"58","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":21},{"ruleId":"52","severity":1,"message":"59","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":25},{"ruleId":"52","severity":1,"message":"60","line":9,"column":10,"nodeType":"54","messageId":"55","endLine":9,"endColumn":25},{"ruleId":"52","severity":1,"message":"61","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":21},{"ruleId":"52","severity":1,"message":"62","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"52","severity":1,"message":"63","line":3,"column":19,"nodeType":"54","messageId":"55","endLine":3,"endColumn":27},{"ruleId":"52","severity":1,"message":"64","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":21},{"ruleId":"52","severity":1,"message":"65","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"52","severity":1,"message":"66","line":7,"column":25,"nodeType":"54","messageId":"55","endLine":7,"endColumn":34},{"ruleId":"52","severity":1,"message":"67","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":26},{"ruleId":"52","severity":1,"message":"68","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":16},{"ruleId":"52","severity":1,"message":"69","line":13,"column":68,"nodeType":"54","messageId":"55","endLine":13,"endColumn":83},{"ruleId":"52","severity":1,"message":"70","line":13,"column":111,"nodeType":"54","messageId":"55","endLine":13,"endColumn":123},{"ruleId":"52","severity":1,"message":"71","line":25,"column":19,"nodeType":"54","messageId":"55","endLine":25,"endColumn":29},{"ruleId":"52","severity":1,"message":"72","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":23},{"ruleId":"52","severity":1,"message":"73","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":15},"no-unused-vars","'red' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'EditorState' is defined but never used.","'draftToMarkdown' is defined but never used.","'markdownToDraft' is defined but never used.","'ReactMarkdown' is defined but never used.","'editor' is defined but never used.","'setState' is defined but never used.","'InputUnstyled' is defined but never used.","'styled' is defined but never used.","'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","'Editor' is defined but never used.","'convertFromHTML' is defined but never used.","'ContentState' is defined but never used.","'setContent' is assigned a value but never used.","'backendComments' is defined but never used.","'getData' is defined but never used."]